require(formattable)
require(igraph)

library("tidyverse")
library("data.table")
library("repr")
library(imager)
library(dplyr) 
library(latex2exp)
library(knitr)
require(igraph)
require(ggplot2)
require(reshape2)
require(permute)

source('from_rawdata_to_network.R')
source('remove_bipartite.R')

# Read data into R. 
# Note that this file separates columns with ";". 
# Thus, we sepecify the separator when calling the read.csv function
data = read.csv("Interactions_data.csv",sep = ";")
path_to_networks_data = "./Simulation_results/"


### Function to filter data
# two filters are actually redundat in this case 
data_pristine <- filter_data_by_covariables(data,"Mine_type","control") %>% filter_data_by_covariables(.,"Stage","pristine") 
dim(data_pristine)

data_sand_ini <- filter_data_by_covariables(data,"Mine_type","sand") %>% filter_data_by_covariables(.,"Stage","ini")
dim(data_sand_ini)

data_sand_inter <- filter_data_by_covariables(data,"Mine_type","sand") %>% filter_data_by_covariables(.,"Stage","inter")
dim(data_sand_inter)

data_sand_adv <- filter_data_by_covariables(data,"Mine_type","sand") %>% filter_data_by_covariables(.,"Stage","adv")
dim(data_sand_adv)

# simulate removal of plants 
iter = 20 # number of iterations: the order of plants removal is randomized to compute the averaged secondary extinction curve 

# ----------- random removal of plants RND ------------
removal_strategy = "RND" # "LTM" "MTL"

NW_pristine <- convert_data_to_incidence_matrix(data_pristine) %>% as.data.frame(.)
num_plants_pristine <- nrow(NW_pristine)   # number of rows
num_animals_pristine <- ncol(NW_pristine)  # number of columns
print(paste0("prinstine # rows ", num_plants_pristine))
print(paste0("prinstine # columns ", num_animals_pristine))
RND_pristine <- remove_plants(NW_pristine, iter, removal_strategy)
save(RND_pristine,file = paste0(path_to_networks_data, "RND_pristine.RData"))
#
NW_sand_ini <- convert_data_to_incidence_matrix(data_sand_ini) %>% as.data.frame(.)
num_plants_sand_ini <- nrow(NW_sand_ini)   # number of rows
num_animals_sand_ini <- ncol(NW_sand_ini)  # number of columns
print(paste0("sand_initial # rows ", num_plants_sand_ini))
print(paste0("sand_initial # columns ", num_animals_sand_ini))
RND_sand_ini  <- remove_plants(NW_sand_ini, iter, removal_strategy)
save(RND_sand_ini,file = paste0(path_to_networks_data, "RND_sand_ini.RData"))
#
NW_sand_inter <- convert_data_to_incidence_matrix(data_sand_inter) %>% as.data.frame(.)
num_plants_sand_inter <- nrow(NW_sand_inter)   # number of rows
num_animals_sand_inter <- ncol(NW_sand_inter)  # number of columns
print(paste0("sand_initial # rows ", num_plants_sand_inter))
print(paste0("sand_initial # columns ", num_animals_sand_inter))
RND_sand_inter  <- remove_plants(NW_sand_inter, iter, removal_strategy)
save(RND_sand_inter,file = paste0(path_to_networks_data, "RND_sand_inter.RData"))
#
NW_sand_adv <- convert_data_to_incidence_matrix(data_sand_adv) %>% as.data.frame(.)
num_plants_sand_adv <- nrow(NW_sand_adv)   # number of rows
num_animals_sand_adv <- ncol(NW_sand_adv)  # number of columns
print(paste0("sand_initial # rows ", num_plants_sand_adv))
print(paste0("sand_initial # columns ", num_animals_sand_adv))
RND_sand_adv  <- remove_plants(NW_sand_adv, iter, removal_strategy)
save(RND_sand_adv,file = paste0(path_to_networks_data, "RND_sand_adv.RData"))

# ----------- removal from least connected to most connected LTM ------------
removal_strategy = "LTM"
LTM_pristine <- remove_plants(NW_pristine, iter, removal_strategy)
save(LTM_pristine,file = paste0(path_to_networks_data, "LTM_pristine.RData"))
#
LTM_sand_ini  <- remove_plants(NW_sand_ini, iter, removal_strategy)
save(LTM_sand_ini,file = paste0(path_to_networks_data, "LTM_sand_ini.RData"))
#
LTM_sand_inter  <- remove_plants(NW_sand_inter, iter, removal_strategy)
save(LTM_sand_inter,file = paste0(path_to_networks_data, "LTM_sand_inter.RData"))
#
LTM_sand_adv  <- remove_plants(NW_sand_adv, iter, removal_strategy)
save(LTM_sand_adv,file = paste0(path_to_networks_data, "LTM_sand_adv.RData"))

# ----------- removal from most connected to least connected MTL ------------
removal_strategy = "MTL"
MTL_pristine <- remove_plants(NW_pristine, iter, removal_strategy)
save(MTL_pristine,file = paste0(path_to_networks_data, "MTL_pristine.RData"))
#
MTL_sand_ini  <- remove_plants(NW_sand_ini, iter, removal_strategy)
save(MTL_sand_ini,file = paste0(path_to_networks_data, "MTL_sand_ini.RData"))
#
MTL_sand_inter  <- remove_plants(NW_sand_inter, iter, removal_strategy)
save(MTL_sand_inter,file = paste0(path_to_networks_data, "MTL_sand_inter.RData"))
#
MTL_sand_adv  <- remove_plants(NW_sand_adv, iter, removal_strategy)
save(MTL_sand_adv,file = paste0(path_to_networks_data, "MTL_sand_adv.RData"))
