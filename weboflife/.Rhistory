xlab(TeX("$f_{pl}$")) +
# # Add text
geom_text(data=annotation_pristine, aes( x=x, y=y, label=label),
color="purple",
size=4 , angle=0) +
geom_text(data=annotation_sand_ini, aes( x=x, y=y, label=label),
color="red",
size=4 , angle=0) +
geom_text(data=annotation_sand_inter, aes( x=x, y=y, label=label),
color="orange",
size=4 , angle=0) +
geom_text(data=annotation_sand_adv, aes( x=x, y=y, label=label),
color="green",
size=4 , angle=0) +
geom_text(data=annotation_weboflife, aes( x=x, y=y, label=label),
color="skyblue1",
size=4 , angle=0) +
geom_text(data=annotation_weboflife, aes( x=x, y=y, label=label),
color="blue",
size=4 , angle=0)
NW_PL_067 <- get_networks(network_name = "M_PL_067") %>% column_to_rownames(., var="V1")
num_plants_PL_067 <- nrow(NW_PL_067)   # number of rows
num_animals_PL_067 <- ncol(NW_PL_067)  # number of columns
# coumpute secondary extinction curve following the chosen strategy of plant removal
LTM_NW_PL_067 <- remove_plants(NW_PL_067, 20, removal_strategy)
annotation_pristine <- data.frame(
x = 0.3,
y = 0.55,
label = paste0("pristine")
)
annotation_sand_ini <- data.frame(
x = 0.3,
y = 0.45,
label = paste0("sand initial")
)
annotation_sand_inter <- data.frame(
x = 0.3,
y = 0.35,
label = paste0("sand intermediate")
)
annotation_sand_adv <- data.frame(
x = 0.3,
y = 0.25,
label = paste0("sand advanced")
)
annotation_weboflife <- data.frame(
x = 0.3,
y = 0.15,
label = "M_PL_062 weboflife"
)
annotation_PL_067 <- data.frame(
x = 0.3,
y = 0.05,
label = "M_PL_067 weboflife"
)
ggplot() +
ggtitle(paste0("strategy: ",removal_strategy)) +
geom_point(data = LTM_pristine, aes(removed_plants/num_plants_pristine, (1- removed_animals/num_animals_pristine)), color = "springgreen4",shape = 2) +
geom_point(data = LTM_sand_ini, aes(removed_plants/num_plants_sand_ini, (1- removed_animals/num_animals_sand_ini)), color = "red",shape = 2) +
geom_point(data = LTM_sand_inter, aes(removed_plants/num_plants_sand_inter, (1- removed_animals/num_animals_sand_inter)), color = "orange",shape = 2) +
geom_point(data = LTM_sand_adv, aes(removed_plants/num_plants_sand_adv, (1- removed_animals/num_animals_sand_adv)), color = "purple",shape = 2) +
geom_point(data = LTM_NW_PL_062, aes(removed_plants/num_plants_PL_062, (1- removed_animals/num_animals_PL_062)), color = "skyblue1",shape = 1) +
geom_point(data = LTM_NW_PL_067, aes(removed_plants/num_plants_PL_067, (1- removed_animals/num_animals_PL_067)), color = "blue",shape = 1) +
ylab(TeX("$f_{an}$")) +
xlab(TeX("$f_{pl}$")) +
# # Add text
geom_text(data=annotation_pristine, aes( x=x, y=y, label=label),
color="purple",
size=4 , angle=0) +
geom_text(data=annotation_sand_ini, aes( x=x, y=y, label=label),
color="red",
size=4 , angle=0) +
geom_text(data=annotation_sand_inter, aes( x=x, y=y, label=label),
color="orange",
size=4 , angle=0) +
geom_text(data=annotation_sand_adv, aes( x=x, y=y, label=label),
color="green",
size=4 , angle=0) +
geom_text(data=annotation_weboflife, aes( x=x, y=y, label=label),
color="skyblue1",
size=4 , angle=0) +
geom_text(data=annotation_PL_067, aes( x=x, y=y, label=label),
color="blue",
size=4 , angle=0)
NW_PL_063 <- get_networks(network_name = "M_PL_063") %>% column_to_rownames(., var="V1")
num_plants_PL_063 <- nrow(NW_PL_063)   # number of rows
num_animals_PL_063 <- ncol(NW_PL_063)  # number of columns
# coumpute secondary extinction curve following the chosen strategy of plant removal
LTM_NW_PL_063 <- remove_plants(NW_PL_063, 20, removal_strategy)
annotation_pristine <- data.frame(
x = 0.3,
y = 0.55,
label = paste0("pristine")
)
annotation_sand_ini <- data.frame(
x = 0.3,
y = 0.45,
label = paste0("sand initial")
)
annotation_sand_inter <- data.frame(
x = 0.3,
y = 0.35,
label = paste0("sand intermediate")
)
annotation_sand_adv <- data.frame(
x = 0.3,
y = 0.25,
label = paste0("sand advanced")
)
annotation_weboflife <- data.frame(
x = 0.3,
y = 0.15,
label = "M_PL_062 weboflife"
)
annotation_PL_063 <- data.frame(
x = 0.3,
y = 0.05,
label = "M_PL_063 weboflife"
)
ggplot() +
ggtitle(paste0("strategy: ",removal_strategy)) +
geom_point(data = LTM_pristine, aes(removed_plants/num_plants_pristine, (1- removed_animals/num_animals_pristine)), color = "springgreen4",shape = 2) +
geom_point(data = LTM_sand_ini, aes(removed_plants/num_plants_sand_ini, (1- removed_animals/num_animals_sand_ini)), color = "red",shape = 2) +
geom_point(data = LTM_sand_inter, aes(removed_plants/num_plants_sand_inter, (1- removed_animals/num_animals_sand_inter)), color = "orange",shape = 2) +
geom_point(data = LTM_sand_adv, aes(removed_plants/num_plants_sand_adv, (1- removed_animals/num_animals_sand_adv)), color = "purple",shape = 2) +
geom_point(data = LTM_NW_PL_062, aes(removed_plants/num_plants_PL_062, (1- removed_animals/num_animals_PL_062)), color = "skyblue1",shape = 1) +
geom_point(data = LTM_NW_PL_063, aes(removed_plants/num_plants_PL_063, (1- removed_animals/num_animals_PL_063)), color = "blue",shape = 1) +
ylab(TeX("$f_{an}$")) +
xlab(TeX("$f_{pl}$")) +
# # Add text
geom_text(data=annotation_pristine, aes( x=x, y=y, label=label),
color="purple",
size=4 , angle=0) +
geom_text(data=annotation_sand_ini, aes( x=x, y=y, label=label),
color="red",
size=4 , angle=0) +
geom_text(data=annotation_sand_inter, aes( x=x, y=y, label=label),
color="orange",
size=4 , angle=0) +
geom_text(data=annotation_sand_adv, aes( x=x, y=y, label=label),
color="green",
size=4 , angle=0) +
geom_text(data=annotation_weboflife, aes( x=x, y=y, label=label),
color="skyblue1",
size=4 , angle=0) +
geom_text(data=annotation_PL_067, aes( x=x, y=y, label=label),
color="blue",
size=4 , angle=0)
NW_PL_063 <- get_networks(network_name = "M_PL_063") %>% column_to_rownames(., var="V1")
num_plants_PL_063 <- nrow(NW_PL_063)   # number of rows
num_animals_PL_063 <- ncol(NW_PL_063)  # number of columns
LTM_NW_PL_063 <- remove_plants(NW_PL_063, 20, removal_strategy)
NW_PL_063 <- get_networks(network_name = "M_PL_063")
nrow(NW_PL_063)
ncol(NW_PL_063)
NW_PL_063 <- get_networks(network_name = "M_PL_063") %>% column_to_rownames(., var="V1")
nrow(NW_PL_063)
head(NW_PL_063)
tmp <- NW_PL_063[-1,]
head(tmp)
head(NW_PL_063)
head(tmp)
tmp[,1]
tmp1 <- tmp[,-1]
head(tmp)
head(tmp1)
tmp1[,1]
tmp <- NW_PL_063[-1,-1]
tmp[1,]
tmp[,1]
NW_PL_063 <- get_networks(network_name = "M_PL_063") %>% column_to_rownames(., var="V1")[-1,-1]
tmp <- get_networks(network_name = "M_PL_063") %>% column_to_rownames(., var="V1")
NW_PL_063 <- tmp[-1,-1]
nrow(NW_PL_063)
ncol(NW_PL_063)
num_plants_PL_063 <- nrow(NW_PL_063)   # number of rows
num_animals_PL_063 <- ncol(NW_PL_063)  # number of columns
# coumpute secondary extinction curve following the chosen strategy of plant removal
LTM_NW_PL_063 <- remove_plants(NW_PL_063, 20, removal_strategy)
tmp <- NW_PL_063[-1,-1]
annotation_pristine <- data.frame(
x = 0.3,
y = 0.55,
label = paste0("pristine")
)
annotation_sand_ini <- data.frame(
x = 0.3,
y = 0.45,
label = paste0("sand initial")
)
annotation_sand_inter <- data.frame(
x = 0.3,
y = 0.35,
label = paste0("sand intermediate")
)
annotation_sand_adv <- data.frame(
x = 0.3,
y = 0.25,
label = paste0("sand advanced")
)
annotation_weboflife <- data.frame(
x = 0.3,
y = 0.15,
label = "M_PL_062 weboflife"
)
annotation_PL_063 <- data.frame(
x = 0.3,
y = 0.05,
label = "M_PL_063 weboflife"
)
ggplot() +
ggtitle(paste0("strategy: ",removal_strategy)) +
geom_point(data = LTM_pristine, aes(removed_plants/num_plants_pristine, (1- removed_animals/num_animals_pristine)), color = "springgreen4",shape = 2) +
geom_point(data = LTM_sand_ini, aes(removed_plants/num_plants_sand_ini, (1- removed_animals/num_animals_sand_ini)), color = "red",shape = 2) +
geom_point(data = LTM_sand_inter, aes(removed_plants/num_plants_sand_inter, (1- removed_animals/num_animals_sand_inter)), color = "orange",shape = 2) +
geom_point(data = LTM_sand_adv, aes(removed_plants/num_plants_sand_adv, (1- removed_animals/num_animals_sand_adv)), color = "purple",shape = 2) +
geom_point(data = LTM_NW_PL_062, aes(removed_plants/num_plants_PL_062, (1- removed_animals/num_animals_PL_062)), color = "skyblue1",shape = 1) +
geom_point(data = LTM_NW_PL_063, aes(removed_plants/num_plants_PL_063, (1- removed_animals/num_animals_PL_063)), color = "blue",shape = 1) +
ylab(TeX("$f_{an}$")) +
xlab(TeX("$f_{pl}$")) +
# # Add text
geom_text(data=annotation_pristine, aes( x=x, y=y, label=label),
color="purple",
size=4 , angle=0) +
geom_text(data=annotation_sand_ini, aes( x=x, y=y, label=label),
color="red",
size=4 , angle=0) +
geom_text(data=annotation_sand_inter, aes( x=x, y=y, label=label),
color="orange",
size=4 , angle=0) +
geom_text(data=annotation_sand_adv, aes( x=x, y=y, label=label),
color="green",
size=4 , angle=0) +
geom_text(data=annotation_weboflife, aes( x=x, y=y, label=label),
color="skyblue1",
size=4 , angle=0) +
geom_text(data=annotation_PL_067, aes( x=x, y=y, label=label),
color="blue",
size=4 , angle=0)
ggplot() +
ggtitle(paste0("strategy: ",removal_strategy)) +
geom_point(data = LTM_pristine, aes(removed_plants/num_plants_pristine, (1- removed_animals/num_animals_pristine)), color = "springgreen4",shape = 2) +
geom_point(data = LTM_sand_ini, aes(removed_plants/num_plants_sand_ini, (1- removed_animals/num_animals_sand_ini)), color = "red",shape = 2) +
geom_point(data = LTM_sand_inter, aes(removed_plants/num_plants_sand_inter, (1- removed_animals/num_animals_sand_inter)), color = "orange",shape = 2) +
geom_point(data = LTM_sand_adv, aes(removed_plants/num_plants_sand_adv, (1- removed_animals/num_animals_sand_adv)), color = "purple",shape = 2) +
geom_point(data = LTM_NW_PL_062, aes(removed_plants/num_plants_PL_062, (1- removed_animals/num_animals_PL_062)), color = "skyblue1",shape = 1) +
geom_point(data = LTM_NW_PL_063, aes(removed_plants/num_plants_PL_063, (1- removed_animals/num_animals_PL_063)), color = "blue",shape = 1) +
ylab(TeX("$f_{an}$")) +
xlab(TeX("$f_{pl}$")) +
# # Add text
geom_text(data=annotation_pristine, aes( x=x, y=y, label=label),
color="purple",
size=4 , angle=0) +
geom_text(data=annotation_sand_ini, aes( x=x, y=y, label=label),
color="red",
size=4 , angle=0) +
geom_text(data=annotation_sand_inter, aes( x=x, y=y, label=label),
color="orange",
size=4 , angle=0) +
geom_text(data=annotation_sand_adv, aes( x=x, y=y, label=label),
color="green",
size=4 , angle=0) +
geom_text(data=annotation_weboflife, aes( x=x, y=y, label=label),
color="skyblue1",
size=4 , angle=0) +
geom_text(data=annotation_PL_063, aes( x=x, y=y, label=label),
color="blue",
size=4 , angle=0)
rm(list=ls())
# remove.packages(c("formattable", "igraph","tidyverse","data.table","repr","imager","dplyr","latex2exp"))
# remove.packages(c("knitr","ggplot2","reshape2","permute"))
remove.packages(c("robustness","transformrawdata, weboflife"))
require(dplyr)
# Read data into R.
# Note that this file separates columns with ";".
# Thus, we sepecify the separator when calling the read.csv function
data = read.csv("Interactions_data.csv",sep = ";")
path_to_networks_data = "./Simulation_results/"
devtools::install_github("bascomptelab/ecological_network_tools/robustness",ref = "raw_data")
library(robustness)
devtools::install_github("bascomptelab/ecological_network_tools/transformrawdata",ref = "raw_data")
library(transformrawdata)
devtools::install_github("bascomptelab/ecological_network_tools/weboflife",ref = "raw_data") #, force=TRUE)
### Function to filter data
# two filters are actually redundat in this case
data_pristine <- filter_raw_data(data,"Mine_type","control") %>% filter_raw_data(.,"Stage","pristine")
dim(data_pristine)
data_sand_ini <- filter_raw_data(data,"Mine_type","sand") %>% filter_raw_data(.,"Stage","ini")
dim(data_sand_ini)
data_sand_inter <- filter_raw_data(data,"Mine_type","sand") %>% filter_raw_data(.,"Stage","inter")
dim(data_sand_inter)
data_sand_adv <- filter_raw_data(data,"Mine_type","sand") %>% filter_raw_data(.,"Stage","adv")
dim(data_sand_adv)
# simulate removal of plants
iter = 20 # number of iterations: the order of plants removal is randomized to compute the averaged secondary extinction curve
# ----------- random removal of plants RND ------------
removal_strategy = "RND" # "LTM" "MTL"
NW_pristine <- incidence_matrix_from_raw_data(data_pristine) %>% as.data.frame(.)
num_plants_pristine <- nrow(NW_pristine)   # number of rows
num_animals_pristine <- ncol(NW_pristine)  # number of columns
print(paste0("prinstine # rows ", num_plants_pristine))
print(paste0("prinstine # columns ", num_animals_pristine))
RND_pristine <- remove_plants(NW_pristine, iter, removal_strategy)
save(RND_pristine,file = paste0(path_to_networks_data, "RND_pristine.RData"))
#
NW_sand_ini <- incidence_matrix_from_raw_data(data_sand_ini) %>% as.data.frame(.)
num_plants_sand_ini <- nrow(NW_sand_ini)   # number of rows
num_animals_sand_ini <- ncol(NW_sand_ini)  # number of columns
print(paste0("sand_initial # rows ", num_plants_sand_ini))
print(paste0("sand_initial # columns ", num_animals_sand_ini))
RND_sand_ini  <- remove_plants(NW_sand_ini, iter, removal_strategy)
save(RND_sand_ini,file = paste0(path_to_networks_data, "RND_sand_ini.RData"))
#
NW_sand_inter <- incidence_matrix_from_raw_data(data_sand_inter) %>% as.data.frame(.)
num_plants_sand_inter <- nrow(NW_sand_inter)   # number of rows
num_animals_sand_inter <- ncol(NW_sand_inter)  # number of columns
print(paste0("sand_initial # rows ", num_plants_sand_inter))
print(paste0("sand_initial # columns ", num_animals_sand_inter))
RND_sand_inter  <- remove_plants(NW_sand_inter, iter, removal_strategy)
save(RND_sand_inter,file = paste0(path_to_networks_data, "RND_sand_inter.RData"))
#
NW_sand_adv <- incidence_matrix_from_raw_data(data_sand_adv) %>% as.data.frame(.)
num_plants_sand_adv <- nrow(NW_sand_adv)   # number of rows
num_animals_sand_adv <- ncol(NW_sand_adv)  # number of columns
print(paste0("sand_initial # rows ", num_plants_sand_adv))
print(paste0("sand_initial # columns ", num_animals_sand_adv))
RND_sand_adv  <- remove_plants(NW_sand_adv, iter, removal_strategy)
save(RND_sand_adv,file = paste0(path_to_networks_data, "RND_sand_adv.RData"))
# ----------- removal from least connected to most connected LTM ------------
removal_strategy = "LTM"
LTM_pristine <- remove_plants(NW_pristine, iter, removal_strategy)
save(LTM_pristine,file = paste0(path_to_networks_data, "LTM_pristine.RData"))
#
LTM_sand_ini  <- remove_plants(NW_sand_ini, iter, removal_strategy)
save(LTM_sand_ini,file = paste0(path_to_networks_data, "LTM_sand_ini.RData"))
#
LTM_sand_inter  <- remove_plants(NW_sand_inter, iter, removal_strategy)
save(LTM_sand_inter,file = paste0(path_to_networks_data, "LTM_sand_inter.RData"))
#
LTM_sand_adv  <- remove_plants(NW_sand_adv, iter, removal_strategy)
save(LTM_sand_adv,file = paste0(path_to_networks_data, "LTM_sand_adv.RData"))
# ----------- removal from most connected to least connected MTL ------------
removal_strategy = "MTL"
MTL_pristine <- remove_plants(NW_pristine, iter, removal_strategy)
save(MTL_pristine,file = paste0(path_to_networks_data, "MTL_pristine.RData"))
#
MTL_sand_ini  <- remove_plants(NW_sand_ini, iter, removal_strategy)
save(MTL_sand_ini,file = paste0(path_to_networks_data, "MTL_sand_ini.RData"))
#
MTL_sand_inter  <- remove_plants(NW_sand_inter, iter, removal_strategy)
save(MTL_sand_inter,file = paste0(path_to_networks_data, "MTL_sand_inter.RData"))
#
MTL_sand_adv  <- remove_plants(NW_sand_adv, iter, removal_strategy)
save(MTL_sand_adv,file = paste0(path_to_networks_data, "MTL_sand_adv.RData"))
# visualize one network
# net <- bipartite_graph_from_raw_data(data_pristine)
# LO <- layout_as_bipartite(net)
#
# plot(net, vertex.label=V(net)$Name,
#      vertex.size=2, vertex.label.dist=12, layout=LO[,2:1],
#      vertex.label.degree = pi*V(net)$type,vertex.label.cex=0.8,vertex.color = rgb(0.8,0.4,0.3,0.8),vertex.label.family="Times",vertex.label.color="black",edge.color="black",main = "Pristine Network")
# Plot data [same as in robustness_analysis]
removal_strategy = "LTM" # "RND" "MTL"
# data of the new network
load(paste0(path_to_networks_data, removal_strategy, "_pristine.RData"))
load(paste0(path_to_networks_data, removal_strategy, "_sand_ini.RData"))
load(paste0(path_to_networks_data, removal_strategy, "_sand_inter.RData"))
load(paste0(path_to_networks_data, removal_strategy, "_sand_adv.RData"))
# networks from weboflife
NW_PL_062 <- get_networks(network_name = "M_PL_062") %>% column_to_rownames(., var="V1")
num_plants_PL_062 <- nrow(NW_PL_062)   # number of rows
num_animals_PL_062 <- ncol(NW_PL_062)  # number of columns
# coumpute secondary extinction curve following the chosen strategy of plant removal
LTM_NW_PL_062 <- remove_plants(NW_PL_062, 3, removal_strategy)
#
# tmp <- get_networks(network_name = "M_PL_063") %>% column_to_rownames(., var="V1")
# NW_PL_063 <- tmp[-1,-1]
# num_plants_PL_063 <- nrow(NW_PL_063)   # number of rows
# num_animals_PL_063 <- ncol(NW_PL_063)  # number of columns
# # coumpute secondary extinction curve following the chosen strategy of plant removal
# LTM_NW_PL_063 <- remove_plants(NW_PL_063, 20, removal_strategy)
# "M_PL_063" is too small!!!
annotation_pristine <- data.frame(
x = 0.3,
y = 0.55,
label = paste0("pristine")
)
annotation_sand_ini <- data.frame(
x = 0.3,
y = 0.45,
label = paste0("sand initial")
)
annotation_sand_inter <- data.frame(
x = 0.3,
y = 0.35,
label = paste0("sand intermediate")
)
annotation_sand_adv <- data.frame(
x = 0.3,
y = 0.25,
label = paste0("sand advanced")
)
annotation_weboflife <- data.frame(
x = 0.3,
y = 0.15,
label = "M_PL_062 weboflife"
)
ggplot() +
ggtitle(paste0("strategy: ",removal_strategy)) +
geom_point(data = LTM_pristine, aes(removed_plants/num_plants_pristine, (1- removed_animals/num_animals_pristine)), color = "springgreen4",shape = 2) +
geom_point(data = LTM_sand_ini, aes(removed_plants/num_plants_sand_ini, (1- removed_animals/num_animals_sand_ini)), color = "red",shape = 2) +
geom_point(data = LTM_sand_inter, aes(removed_plants/num_plants_sand_inter, (1- removed_animals/num_animals_sand_inter)), color = "orange",shape = 2) +
geom_point(data = LTM_sand_adv, aes(removed_plants/num_plants_sand_adv, (1- removed_animals/num_animals_sand_adv)), color = "purple",shape = 2) +
geom_point(data = LTM_NW_PL_062, aes(removed_plants/num_plants_PL_062, (1- removed_animals/num_animals_PL_062)), color = "skyblue1",shape = 1) +
ylab(TeX("$f_{an}$")) +
xlab(TeX("$f_{pl}$")) +
# # Add text
geom_text(data=annotation_pristine, aes( x=x, y=y, label=label),
color="purple",
size=4 , angle=0) +
geom_text(data=annotation_sand_ini, aes( x=x, y=y, label=label),
color="red",
size=4 , angle=0) +
geom_text(data=annotation_sand_inter, aes( x=x, y=y, label=label),
color="orange",
size=4 , angle=0) +
geom_text(data=annotation_sand_adv, aes( x=x, y=y, label=label),
color="green",
size=4 , angle=0) +
geom_text(data=annotation_weboflife, aes( x=x, y=y, label=label),
color="skyblue1",
size=4 , angle=0)
ggplot() +
ggtitle(paste0("strategy: ",removal_strategy)) +
geom_point(data = LTM_pristine, aes(removed_plants/num_plants_pristine, (1- removed_animals/num_animals_pristine)), color = "springgreen4",shape = 2) +
geom_point(data = LTM_sand_ini, aes(removed_plants/num_plants_sand_ini, (1- removed_animals/num_animals_sand_ini)), color = "red",shape = 2) +
geom_point(data = LTM_sand_inter, aes(removed_plants/num_plants_sand_inter, (1- removed_animals/num_animals_sand_inter)), color = "orange",shape = 2) +
geom_point(data = LTM_sand_adv, aes(removed_plants/num_plants_sand_adv, (1- removed_animals/num_animals_sand_adv)), color = "purple",shape = 2) +
geom_point(data = LTM_NW_PL_062, aes(removed_plants/num_plants_PL_062, (1- removed_animals/num_animals_PL_062)), color = "skyblue1",shape = 1) +
ylab(TeX("$f_{an}$")) +
xlab(TeX("$f_{pl}$")) +
# # Add text
geom_text(data=annotation_pristine, aes( x=x, y=y, label=label),
color="springgreen4",
size=4 , angle=0) +
geom_text(data=annotation_sand_ini, aes( x=x, y=y, label=label),
color="red",
size=4 , angle=0) +
geom_text(data=annotation_sand_inter, aes( x=x, y=y, label=label),
color="orange",
size=4 , angle=0) +
geom_text(data=annotation_sand_adv, aes( x=x, y=y, label=label),
color="purple",
size=4 , angle=0) +
geom_text(data=annotation_weboflife, aes( x=x, y=y, label=label),
color="skyblue1",
size=4 , angle=0)
library(weboflife)
setwd("~/Documents/UZH_icloud/tutorial_project/weboflife")
library("tidyverse")
library(ggplot2)
library(latex2exp)
remove.packages("weboflife")
remove.packages("robustness")
pacman::p_load("plyr","tidyverse", "cowplot", "bipartite", "devtools", "jsonlite", "data.table", "assertthat","plotly")
path_to_networks_data = "/Users/alessandro/Documents/UZH_icloud/tutorial_project/test_Rafael/Simulation_results/"
devtools::install_github("bascomptelab/ecological_network_tools/weboflife",ref = "raw_data",force=TRUE)
library(weboflife)
?get_networks
?get_networks_info
?get_network_info
devtools::install_github("bascomptelab/ecological_network_tools/robustness",ref = "raw_data",force = TRUE)
library(robustness)
# download one networks from the Web of Life
my_network <- get_networks(network_name = "M_PL_062")
# transform into a suitable format for the funciton remove_plants()
NW_PL_062 <-  column_to_rownames(my_network, var="V1")
num_plants_PL_062 <- nrow(NW_PL_062)   # number of rows
num_animals_PL_062 <- ncol(NW_PL_062)  # number of columns
library("tidyverse")
library(ggplot2)
library(latex2exp)
pacman::p_load("plyr","tidyverse", "cowplot", "bipartite", "devtools", "jsonlite", "data.table", "assertthat","plotly")
# transform into a suitable format for the funciton remove_plants()
NW_PL_062 <-  column_to_rownames(my_network, var="V1")
num_plants_PL_062 <- nrow(NW_PL_062)   # number of rows
num_animals_PL_062 <- ncol(NW_PL_062)  # number of columns
removal_strategy = "LTM" # "RND" "MTL"
# coumpute secondary extinction curve following the chosen strategy of plant removal
RND_NW_PL_062  <- remove_plants(NW_PL_062, 3, removal_strategy)
annotation_PL_062 <- data.frame(
x = 0.3,
y = 0.35,
label = "M_PL_062"
)
removal_strategy = "LTM" # "RND" "MTL"
# coumpute secondary extinction curve following the chosen strategy of plant removal
RND_NW_PL_062  <- remove_plants(NW_PL_062, 3, removal_strategy, 136)
annotation_PL_062 <- data.frame(
x = 0.3,
y = 0.35,
label = "M_PL_062"
)
ggplot() +
ggtitle(paste0("strategy: ",removal_strategy)) +
geom_point(data = RND_NW_PL_062, aes(removed_plants/num_plants_PL_062, (1- removed_animals/num_animals_PL_062)), color = "red",shape = 1) +
ylab(TeX("$f_{an}$")) +
xlab(TeX("$f_{pl}$")) +
# # Add text
geom_text(data=annotation_PL_062, aes( x=x, y=y, label=label),
color="red",
size=4 , angle=0)
